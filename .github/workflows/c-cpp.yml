name: C/C++ Multi-Platform CI

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: vcpkg install nlohmann-json
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
      - name: Create build directory
        run: mkdir build
      - name: Configure CMake
        run: cmake -B build -S . -G "Visual Studio 17 2022" -A x64 -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build Release
        run: cmake --build build --config Release
      - name: Upload Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: game-windows
          path: build/Release/game.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: brew install nlohmann-json
      - name: Create build directory
        run: mkdir build
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
      - name: Build macOS
        run: cmake --build build
      - name: Upload macOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: game-macos
          path: build/game

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake nlohmann-json3-dev
      - name: Create build directory
        run: mkdir build
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
      - name: Build Linux
        run: cmake --build build
      - name: Upload Linux Binary
        uses: actions/upload-artifact@v4
        with:
          name: game-linux
          path: build/game

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake nlohmann-json3-dev
      - name: Create build directory
        run: mkdir build
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
      - name: Build Tests
        run: cmake --build build
      - name: Run Tests
        run: ctest --test-dir build --output-on-failure
